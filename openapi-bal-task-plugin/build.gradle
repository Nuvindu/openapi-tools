/*
 * Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java-library"

description = "OpenAPI Tooling - OpenAPI to Ballerina"

configurations.all {
    resolutionStrategy.preferProjectModules()
}

dependencies {
    implementation project(':openapi-core')
    implementation("io.swagger.parser.v3:swagger-parser:${swaggerParserVersion}") {
        exclude group: "io.swagger", module: "swagger-compat-spec-parser"
        exclude group: "org.slf4j", module: "slf4j-ext"
        exclude group: "javax.validation", module: "validation-api"
    }
    implementation "org.ballerinalang:ballerina-lang"
    implementation "org.ballerinalang:ballerina-parser"
    implementation "org.ballerinalang:formatter-core"
    implementation "org.ballerinalang:ballerina-cli"
    implementation "org.ballerinalang:ballerina-tools-api"
    implementation "org.ballerinalang:toml-parser:${ballerinaLangVersion}"
    implementation "com.google.code.findbugs:jsr305"
    implementation "commons-codec:commons-codec:${commonsCodecVersion}"
    testImplementation "org.testng:testng"
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        include(dependency("commons-codec:commons-codec:${commonsCodecVersion}"))
        include(dependency('io.swagger.parser.v3:swagger-parser'))
        exclude('META-INF/*.SF')
        exclude('META-INF/*.DSA')
        exclude('META-INF/*.RSA')
    }
    // Customize the JAR file name without the '-all' suffix
    archiveFileName = "openapi-bal-task-plugin-${project.version}.jar"
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
build.dependsOn shadowJar

// Disable the default 'jar' task
tasks.named('jar').configure {
    enabled = false
}
