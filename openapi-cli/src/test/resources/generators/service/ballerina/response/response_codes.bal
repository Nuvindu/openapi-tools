import ballerina/http;

listener http:Listener ep0 = new (9090, config = {host: "localhost"});

service /payloadV on ep0 {
    # Description
    #
    # + return - returns can be any of following types
    # http:Continue (Continue)
    # http:SwitchingProtocols (SwitchingProtocols)
    # http:Processing (Processing)
    # http:EarlyHints (EarlyHints)
    # http:Ok (Ok)
    # http:Created (Created)
    # http:Accepted (Accepted)
    # http:NonAuthoritativeInformation (NonAuthoritativeInformation)
    # http:NoContent (NoContent)
    # http:PartialContent (PartialContent)
    # http:MultiStatus (MultiStatus)
    # http:AlreadyReported (AlreadyReported)
    # http:IMUsed (IMUsed)
    # http:MultipleChoices (MultipleChoices)
    # http:MovedPermanently (MovedPermanently)
    # http:Found (Found)
    # http:SeeOther (SeeOther)
    # http:NotModified (NotModified)
    # http:UseProxy (UseProxy)
    # http:TemporaryRedirect (TemporaryRedirect)
    # http:PermanentRedirect (PermanentRedirect)
    # http:BadRequest (BadRequest)
    # http:Unauthorized (Unauthorized)
    # http:PaymentRequired (PaymentRequired)
    # http:Forbidden (Forbidden)
    # http:NotFound (NotFound)
    # http:MethodNotAllowed (MethodNotAllowed)
    # http:NotAcceptable (NotAcceptable)
    # http:ProxyAuthenticationRequired (ProxyAuthenticationRequired)
    # http:Conflict (Conflict)
    # http:Gone (Gone)
    # http:LengthRequired (LengthRequired)
    # http:PreconditionFailed (PreconditionFailed)
    # http:PayloadTooLarge (PayloadTooLarge)
    # http:UriTooLong (UriTooLong)
    # http:UnsupportedMediaType (UnsupportedMediaType)
    # http:RangeNotSatisfiable (RangeNotSatisfiable)
    # http:ExpectationFailed (ExpectationFailed)
    # http:MisdirectedRequest (MisDirectedRequest)
    # http:UnprocessableEntity (UnProcessableEntity)
    # http:Locked (Locked)
    # http:FailedDependency (FailedDependency)
    # http:TooEarly (TooEarly)
    # http:UpgradeRequired (UpgradeRequired)
    # http:PreconditionRequired (PredictionRequired)
    # http:TooManyRequests (TooManyRequests)
    # http:RequestHeaderFieldsTooLarge (RequestHeaderFieldsTooLarge)
    # http:UnavailableDueToLegalReasons (UnavailableDueToLegalReasons)
    # http:InternalServerError (InternalServerError)
    # http:NotImplemented (NotImplemented)
    # http:BadGateway (BadGateway)
    # http:ServiceUnavailable (ServiceUnavailable)
    # http:HttpVersionNotSupported (HttpVersionNotSupported)
    # http:VariantAlsoNegotiates (VariantAlsoNegotiates)
    # http:InsufficientStorage (InsufficientStorage)
    # http:LoopDetected (LoopDetected)
    # http:NotExtended (NotExtended)
    # http:NetworkAuthorizationRequired (NetworkAuthorizationRequired)
    resource function post pet() returns http:Continue|http:SwitchingProtocols|http:Processing|http:EarlyHints|http:Ok|http:Created|http:Accepted|http:NonAuthoritativeInformation|http:NoContent|http:PartialContent|http:MultiStatus|http:AlreadyReported|http:IMUsed|http:MultipleChoices|http:MovedPermanently|http:Found|http:SeeOther|http:NotModified|http:UseProxy|http:TemporaryRedirect|http:PermanentRedirect|http:BadRequest|http:Unauthorized|http:PaymentRequired|http:Forbidden|http:NotFound|http:MethodNotAllowed|http:NotAcceptable|http:ProxyAuthenticationRequired|http:Conflict|http:Gone|http:LengthRequired|http:PreconditionFailed|http:PayloadTooLarge|http:UriTooLong|http:UnsupportedMediaType|http:RangeNotSatisfiable|http:ExpectationFailed|http:MisdirectedRequest|http:UnprocessableEntity|http:Locked|http:FailedDependency|http:TooEarly|http:UpgradeRequired|http:PreconditionRequired|http:TooManyRequests|http:RequestHeaderFieldsTooLarge|http:UnavailableDueToLegalReasons|http:InternalServerError|http:NotImplemented|http:BadGateway|http:ServiceUnavailable|http:HttpVersionNotSupported|http:VariantAlsoNegotiates|http:InsufficientStorage|http:LoopDetected|http:NotExtended|http:NetworkAuthorizationRequired {
    }
}
